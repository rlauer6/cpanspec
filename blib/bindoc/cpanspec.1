.\" Automatically generated by Pod::Man 4.11 (Pod::Simple 3.28)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "CPANSPEC 1"
.TH CPANSPEC 1 "2020-04-15" "perl v5.16.3" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
cpanspec \- Generate a spec file for a CPAN module
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
cpanspec [options] [file [...]]
.PP
.Vb 10
\& Options:
\&   \-\-help       \-h      Help message
\&   \-\-old        \-o      Be more compatible with old RHL/FC releases
\&   \-\-license    \-l      Include generated license texts if absent in source
\&   \-\-noprefix   \-n      Don\*(Aqt add perl\- prefix to package name
\&   \-\-force      \-f      Force overwriting existing spec
\&   \-\-packager   \-p      Name and email address of packager (for changelog)
\&   \-\-release    \-r      Release of package (defaults to 1)
\&   \-\-epoch      \-e      Epoch of package
\&   \-\-disttag    \-d      Disttag (defaults to %{?dist})
\&   \-\-srpm       \-s      Build a source rpm
\&   \-\-build      \-b      Build source and binary rpms
\&   \-\-cpan       \-c      CPAN mirror URL
\&   \-\-verbose    \-v      Be more verbose
\&   \-\-prefer\-macros  \-m  Prefer macros over environment variables in the spec
\&
\& Long options:
\&   \-\-follow             Process build dependencies
\&   \-\-filter\-requires    Specify Requires to remove
\&   \-\-filter\-provides    Specify Provides to remove
\&   \-\-add\-requires       Add Requires for this item
\&   \-\-add\-provides       Add Provides for this item
\&   \-\-add\-buildrequires  Add BuildRequires for this item
\&   \-\-version            Print the version number and exit
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
\&\fBcpanspec\fR will generate a spec file to build a rpm from a CPAN-style
Perl module distribution.
.SH "OPTIONS"
.IX Header "OPTIONS"
.IP "\fB\-h\fR, \fB\-\-help\fR" 4
.IX Item "-h, --help"
Print a brief help message and exit.
.IP "\fB\-o\fR, \fB\-\-old\fR" 4
.IX Item "-o, --old"
Be more compatible with old \s-1RHL/FC\s0 releases.  With this option enabled,
the generated spec file
.RS 4
.IP "\(bu" 4
Defines perl_vendorlib or perl_vendorarch.
.IP "\(bu" 4
Includes explicit dependencies for core Perl modules.
.IP "\(bu" 4
Uses \f(CW\*(C`%check || :\*(C'\fR instead of just \f(CW%check\fR.
.IP "\(bu" 4
Includes a hack to remove \s-1LD_RUN_PATH\s0 from Makefile.
.RE
.RS 4
.RE
.IP "\fB\-l\fR, \fB\-\-license\fR" 4
.IX Item "-l, --license"
Generate \s-1COPYING\s0 and Artistic license texts if the source doesn't seem
to include them.
.IP "\fB\-n\fR, \fB\-\-noprefix\fR" 4
.IX Item "-n, --noprefix"
Don't add \fIperl\-\fR prefix to the name of the package.  This is useful
for perl-based applications (such as this one), so that the name of
the rpm is simply \fBcpanspec\fR instead of \fBperl-cpanspec\fR.
.IP "\fB\-f\fR, \fB\-\-force\fR" 4
.IX Item "-f, --force"
Force overwriting an existing spec file.  Normally \fBcpanspec\fR will
refuse to overwrite an existing spec file for safety.  This option
removes that safety check.  Please use with caution.
.IP "\fB\-p\fR, \fB\-\-packager\fR" 4
.IX Item "-p, --packager"
The name and email address of the packager.  Overrides the \f(CW%packager\fR
macro in \f(CW\*(C`~/.rpmmacros\*(C'\fR.
.IP "\fB\-r\fR, \fB\-\-release\fR" 4
.IX Item "-r, --release"
The release number of the package.  Defaults to 1.
.IP "\fB\-e\fR, \fB\-\-epoch\fR" 4
.IX Item "-e, --epoch"
The epoch number of the package.  By default, this is undefined, so
no epoch will be used in the generated spec.
.IP "\fB\-d\fR, \fB\-\-disttag\fR" 4
.IX Item "-d, --disttag"
Disttag (a string to append to the release number), used to
differentiate builds for various releases.  Defaults to the
semi-standard (for Fedora) string \f(CW\*(C`%{?dist}\*(C'\fR.
.IP "\fB\-s\fR, \fB\-\-srpm\fR" 4
.IX Item "-s, --srpm"
Build a source rpm from the generated spec file.
.IP "\fB\-b\fR, \fB\-\-build\fR" 4
.IX Item "-b, --build"
Build source and binary rpms from the generated spec file.
\&\fBPlease be aware that this is likely to fail!\fR  Even if it succeeds,
the generated rpm will almost certainly need some work to make
rpmlint happy.
.IP "\fB\-c\fR, \fB\-\-cpan\fR" 4
.IX Item "-c, --cpan"
The \s-1URL\s0 to a \s-1CPAN\s0 mirror.  If not specified with this option or the
\&\fB\s-1CPAN\s0\fR environment variable, defaults to <http://www.cpan.org/>.
.IP "\fB\-v\fR, \fB\-\-verbose\fR" 4
.IX Item "-v, --verbose"
Be more verbose.
.IP "\fB\-m\fR, \fB\-\-prefer\-macros\fR" 4
.IX Item "-m, --prefer-macros"
Prefer the macro form of common spec constructs over the environment variable
form (e.g. %{buildroot} vs \f(CW$RPM_BUILD_ROOT\fR).
.IP "\fB\-\-follow\fR" 4
.IX Item "--follow"
Add build dependencies to the list of modules to process.
.IP "\fB\-\-filter\-requires\fR" 4
.IX Item "--filter-requires"
Specify Requires to remove.
.IP "\fB\-\-filter\-provides\fR" 4
.IX Item "--filter-provides"
Specify Provides to remove.
.IP "\fB\-\-add\-requires\fR" 4
.IX Item "--add-requires"
Add Requires for this item.
.IP "\fB\-\-add\-provides\fR" 4
.IX Item "--add-provides"
Add Provides for this item.
.IP "\fB\-\-add\-buildrequires\fR" 4
.IX Item "--add-buildrequires"
Add BuildRequires for this item.
.IP "\fB\-\-version\fR" 4
.IX Item "--version"
Print the version number and exit.
.SH "AUTHOR"
.IX Header "AUTHOR"
Steven Pritchard <steve@kspei.com>
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\fBperl\fR\|(1), \fBcpan2rpm\fR\|(1), \fBcpanflute2\fR\|(1)
